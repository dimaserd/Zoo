<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zoo.ServerJs</name>
    </assembly>
    <members>
        <member name="T:Zoo.ServerJs.Abstractions.IJsWorker">
            <summary>
            Абстракция над js обработчиком
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IJsWorker.JsWorkerDocs">
            <summary>
            Получить документацию
            </summary>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Consts.JsConsts">
            <summary>
            Константы для вызова js обработчиков
            </summary>
        </member>
        <member name="F:Zoo.ServerJs.Consts.JsConsts.ApiObjectName">
            <summary>
            Название объекта
            </summary>
        </member>
        <member name="F:Zoo.ServerJs.Consts.JsConsts.CallFunctionName">
            <summary>
            Название функции, которое используется для вызова js обработчиков
            </summary>
        </member>
        <member name="F:Zoo.ServerJs.Consts.JsConsts.CallExternalFunctionName">
            <summary>
            Название функции, которое используется для вызова внешнего js компонента
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.ExternalJsComponent">
            <summary>
            Внешний js компонент
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.ExternalJsComponent.ComponentName">
            <summary>
            Название компонента
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.ExternalJsComponent.Script">
            <summary>
            Скрипт компонента
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsAction`1">
            <summary>
            Обертка над методом в Javascript аналогичная <see cref="T:System.Action`1"/>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsAction`1.#ctor(System.Action{`0})">
            <summary>
            Конструктор
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsAction`1.GetJsMethod(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Получить документацию по методу
            </summary>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsFunc`1">
            <summary>
            Обертка над функцией в Javascript аналогичная <see cref="T:System.Func`1"/>
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsFunc`1.#ctor(System.Func{`0})">
            <summary>
            Конструктор
            </summary>
            <param name="func"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsFunc`1.GetJsMethod(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Получить документацию по методу
            </summary>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsFunc`2">
            <summary>
            Обертка над функцией в Javascript аналогичная <see cref="T:System.Func`2"/>
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsFunc`2.#ctor(System.Func{`0,`1})">
            <summary>
            Конструктор
            </summary>
            <param name="func"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsFunc`2.GetJsMethod(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Получить документацию по методу
            </summary>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsFunc`3">
            <summary>
            Обертка над функцией в Javascript аналогичная <see cref="T:System.Func`3"/>
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsFunc`3.#ctor(System.Func{`0,`1,`2})">
            <summary>
            Конструктор
            </summary>
            <param name="func"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsFunc`3.GetJsMethod(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Получить документацию по методу
            </summary>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsFunc`4">
            <summary>
            Обертка над функцией в Javascript аналогичная <see cref="T:System.Func`4"/>
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsFunc`4.#ctor(System.Func{`0,`1,`2,`3})">
            <summary>
            Конструктор
            </summary>
            <param name="func"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsFunc`4.GetJsMethod(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Получить документацию по методу
            </summary>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsLogggedVariables">
            <summary>
            Залоггированные переменные
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsLogggedVariables.LoggedOnUtc">
            <summary>
            Дата логгирования
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsLogggedVariables.SerializedVariables">
            <summary>
            Сериализованные переменные
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsScriptExecutedResult">
            <summary>
            Результат выполнения метода серверного javascript обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.StartedOnUtc">
            <summary>
            Дата начала
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.FinishOnUtc">
            <summary>
            Дата окончания
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.Logs">
            <summary>
            Список логов
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.ExceptionStackTrace">
            <summary>
            Исключение
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsSerializedVariable">
            <summary>
            сериализованная переменная
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsSerializedVariable.TypeFullName">
            <summary>
            Полное название типа данных
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsSerializedVariable.DataJson">
            <summary>
            Сериализованные данные
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsTaskFunc`1">
            <summary>
            Обертка над таской в Javascript аналогичная <see cref="T:System.Threading.Tasks.Task`1"/>
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsTaskFunc`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})">
            <summary>
            Конструктор
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsTaskFunc`1.GetJsMethod(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Получить документацию по методу
            </summary>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsTaskFunc`2">
            <summary>
            Обертка над параметризированной таской в Javascript аналогичная вызову асинхронной функции с параметрами.
            <para></para>
            Результат вызова которой аналогичен <see cref="T:System.Threading.Tasks.Task`1"/>
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsTaskFunc`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}})">
            <summary>
            Конструктор
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsTaskFunc`2.GetJsMethod(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Получить документацию по методу
            </summary>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsTaskFunc`3">
            <summary>
            Обертка над параметризированной таской в Javascript аналогичная вызову асинхронной функции с параметрами.
            <para></para>
            Результат вызова которой аналогичен <see cref="T:System.Threading.Tasks.Task`1"/>
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsTaskFunc`3.#ctor(System.Func{`0,`1,System.Threading.Tasks.Task{`2}})">
            <summary>
            Конструктор
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsTaskFunc`3.GetJsMethod(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Получить документацию по методу
            </summary>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerDocumentation">
            <summary>
            Документация серверного js обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerDocumentation.WorkerName">
            <summary>
            Название обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerDocumentation.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerDocumentation.Methods">
            <summary>
            Методы обработчика
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerDocumentation.GetOpenApiDocumentation">
            <summary>
            Получить модель для построения документации
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerDocumentation.HandleCall(System.String,Zoo.ServerJs.Models.Method.JsWorkerMethodCallParameters)">
            <summary>
            Обработка вызова метода
            </summary>
            <param name="methodName"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerMethodBase">
            <summary>
            Базовое описание метода для серверного javascript обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodBase.FunctionLink">
            <summary>
            Ссылка на функцию
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodBase.HandleCall(Zoo.ServerJs.Models.Method.JsWorkerMethodCallParameters)">
            <summary>
            Обработать вызов
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerMethodCallParameters">
            <summary>
            Параметры вызова javascript метода
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodCallParameters.#ctor(System.Object[])">
            <summary>
            Конструктор
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodCallParameters.GetParameter``1">
            <summary>
            Получить параметр
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs">
            <summary>
            Модель описывающая js метод или функцию
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.Parameters">
            <summary>
            Типы входных параметров
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.Response">
            <summary>
            Тип возвращаемого значения 
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.Method">
            <summary>
            Ссылка на метод
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.MethodName">
            <summary>
            Название метода
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.Description">
            <summary>
            Описание метода
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.GetMethod``1(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions,Zoo.ServerJs.Models.JsTaskFunc{``0})">
            <summary>
            Получить обертку для метода
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="opts"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.GetMethod``2(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions,Zoo.ServerJs.Models.JsTaskFunc{``0,``1})">
            <summary>
            Получить обертку для метода
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="opts"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.GetMethod``3(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions,Zoo.ServerJs.Models.JsTaskFunc{``0,``1,``2})">
            <summary>
            Получить обертку для метода
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="opts"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.GetMethod``1(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions,Zoo.ServerJs.Models.JsFunc{``0})">
            <summary>
            Получить обертку для метода
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="opts"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.GetMethod``2(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions,Zoo.ServerJs.Models.JsFunc{``0,``1})">
            <summary>
            Получить обертку для метода
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="opts"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.GetMethod``3(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions,Zoo.ServerJs.Models.JsFunc{``0,``1,``2})">
            <summary>
            Получить обертку для метода
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="opts"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.GetMethod``4(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions,Zoo.ServerJs.Models.JsFunc{``0,``1,``2,``3})">
            <summary>
            Получить обертку для метода
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="opts"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.GetMethod``1(Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions,Zoo.ServerJs.Models.JsAction{``0})">
            <summary>
            Получить обертку для метода
            </summary>
            <typeparam name="TParam"></typeparam>
            <param name="opts"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions">
            <summary>
            Опции для построения документации по методу
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions.MethodName">
            <summary>
            Название метода
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions.Description">
            <summary>
            Описание метода
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerMethodResult">
            <summary>
            Результат вызова метода обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodResult.Result">
            <summary>
            Результат вызова
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation">
            <summary>
            Описание серверного javascript обработчика
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation.#ctor(Zoo.ServerJs.Models.Method.JsWorkerDocumentation)">
            <summary>
            Конструктор
            </summary>
            <param name="docs"></param>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation.WorkerName">
            <summary>
            Название обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation.Methods">
            <summary>
            Методы
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.#ctor(Zoo.ServerJs.Models.Method.JsWorkerMethodDocs)">
            <summary>
            Конструктор
            </summary>
            <param name="methodDocs"></param>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.MethodName">
            <summary>
            Название метода
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.Response">
            <summary>
            Ответ от метода обработчика. Подробное описание типа.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.Parameters">
            <summary>
            Параметры для метода обработчика. Подробное описание типа.
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Services.HandleJsCallWorker">
            <summary>
            Обработчик js вызовов
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.HandleJsCallWorker.#ctor(System.Collections.Generic.IReadOnlyCollection{Zoo.ServerJs.Abstractions.IJsWorker},System.Collections.Generic.IReadOnlyCollection{Zoo.ServerJs.Models.ExternalJsComponent})">
            <summary>
            Конструктор
            </summary>
            <param name="workers"></param>
            <param name="externalComponents"></param>
        </member>
        <member name="M:Zoo.ServerJs.Services.HandleJsCallWorker.Call(System.String,System.String,System.Object[])">
            <summary>
            Вызвать внутренний сервис, написанный на Js
            </summary>
            <param name="workerName">название класса рабочего который нужно вызвать</param>
            <param name="method">метод который нужно вызвать у данного рабочего</param>
            <param name="methodParams">Параметры метода</param>
        </member>
        <member name="M:Zoo.ServerJs.Services.HandleJsCallWorker.CallExternal(System.String,System.String)">
            <summary>
            Вызвать внешний сервис, определенный через Js
            </summary>
            <param name="componentName"></param>
            <param name="methodName"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.HandleJsCallWorker.CallExternal(System.String,System.String,System.Object)">
            <summary>
            Вызвать внешний сервис, определенный через Js
            </summary>
            <param name="componentName"></param>
            <param name="methodName"></param>
            <param name="methodPayLoad"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Services.JsExecutor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutor.JsWorkers">
            <summary>
            Javascript обработчики
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutor.ExternalComponents">
            <summary>
            Внешние компоненты
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutor.JsCallHandler">
            <summary>
            Обработчик Js вызовов
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.#ctor(Zoo.ServerJs.Services.JsExecutorProperties)">
            <summary>
            
            </summary>
            <param name="properties"></param>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutor.Engine">
            <summary>
            Движок JInt
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.GetDocumentation">
            <summary>
            Получить документацию
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.CallManySimpleApis(System.Collections.Generic.List{System.String})">
            <summary>
            Асинхронно вызвать несколько обработчиков
            </summary>
            <param name="jsScripts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.CallSimpleApi(System.String)">
            <summary>
            Вызвать обработчик
            </summary>
            <param name="jsScript"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.RunScriptDetaiiled(System.String)">
            <summary>
            Вызвать скрипт
            </summary>
            <param name="jsScript"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Services.JsExecutorBuilder">
            <summary>
            Построитель для <see cref="T:Zoo.ServerJs.Services.JsExecutor"/>
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddExternalComponents(System.Collections.Generic.IEnumerable{Zoo.ServerJs.Models.ExternalJsComponent})">
            <summary>
            Добавить внешние компоненты
            </summary>
            <param name="components"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddExternalComponent(Zoo.ServerJs.Models.ExternalJsComponent)">
            <summary>
            Добавить внешний компонент
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddJsWorker(Zoo.ServerJs.Abstractions.IJsWorker)">
            <summary>
            Добавить нового рабочего
            </summary>
            <param name="jsWorker"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddJsWorkers(System.Collections.Generic.IEnumerable{Zoo.ServerJs.Abstractions.IJsWorker})">
            <summary>
            Добавить новых рабочих
            </summary>
            <param name="jsWorkers"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.BuildJsExecutor(System.Action{Jint.Engine})">
            <summary>
            Построить исполнителя скриптов
            </summary>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Services.JsExecutorProperties">
            <summary>
            Свойства для javascript исполнителя
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutorProperties.EngineAction">
            <summary>
            Действие над движком
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutorProperties.JsWorkers">
            <summary>
            Список обработчиков
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutorProperties.ExternalComponents">
            <summary>
            Внешние компоненты
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Statics.ZooSerializer">
            <summary>
            Внутренний сериализатор
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Statics.ZooSerializer.Deserialize``1(System.String)">
            <summary>
            Дессериализовать строку в объект
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Statics.ZooSerializer.Serialize(System.Object)">
            <summary>
            Сериализовать объект в строку
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
    </members>
</doc>
