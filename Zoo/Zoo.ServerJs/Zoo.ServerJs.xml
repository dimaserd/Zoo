<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zoo.ServerJs</name>
    </assembly>
    <members>
        <member name="T:Zoo.ServerJs.Abstractions.IJsScriptTaskStorage">
            <summary>
            Хранилище для скриптов
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IJsScriptTaskStorage.AddTask(Zoo.ServerJs.Models.Task.AddJsTask)">
            <summary>
            Добавить задание
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IJsScriptTaskStorage.AddResult(Zoo.ServerJs.Models.JsScriptExecutedResult)">
            <summary>
            Добавить результат исполненного скрипта
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IJsScriptTaskStorage.GetTask(System.Guid)">
            <summary>
            Получить задание по идентификатору
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IJsScriptTaskStorage.CancelTask(System.Guid)">
            <summary>
            Отменить задание
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IJsScriptTaskStorage.SearchTasks(Zoo.ServerJs.Models.SearchJsTasks)">
            <summary>
            Искать скрипты
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Abstractions.IJsWorker">
            <summary>
            Абстракция над js обработчиком
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IJsWorker.JsWorkerDocs(Zoo.ServerJs.Services.JsWorkerBuilder)">
            <summary>
            Получить локументацию
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Abstractions.IJsWorkerMethodCallParameters">
            <summary>
            Параметры для вызова метода
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IJsWorkerMethodCallParameters.GetParameter``1">
            <summary>
            Получить параметр
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IJsWorkerMethodCallParameters.GetParamsLength">
            <summary>
            Получить длину параметров
            </summary>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Abstractions.IServerJsHttpClient">
            <summary>
            Http клиент для js исполнителя
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IServerJsHttpClient.PostAsync``1(System.String,System.String,System.String,``0)">
            <summary>
            Совершить Post запрос
            </summary>
            <typeparam name="TRequest"></typeparam>
            <param name="hostUrl"></param>
            <param name="hostName"></param>
            <param name="path"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Abstractions.IServerJsHttpClient.GetAsync(System.String,System.String,System.String)">
            <summary>
            Совершить Get запрос
            </summary>
            <param name="hostUrl"></param>
            <param name="hostName"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Consts.HttpPaths">
            <summary>
            Http пути
            </summary>
        </member>
        <member name="F:Zoo.ServerJs.Consts.HttpPaths.GetDocs">
            <summary>
            Получение документов
            </summary>
        </member>
        <member name="F:Zoo.ServerJs.Consts.HttpPaths.HandleCall">
            <summary>
            Обработка вызова
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Consts.JsConsts">
            <summary>
            Константы для вызова js обработчиков
            </summary>
        </member>
        <member name="F:Zoo.ServerJs.Consts.JsConsts.ApiObjectName">
            <summary>
            Название объекта
            </summary>
        </member>
        <member name="F:Zoo.ServerJs.Consts.JsConsts.InnerApiObjectName">
            <summary>
            Название объекта
            </summary>
        </member>
        <member name="F:Zoo.ServerJs.Consts.JsConsts.CallFunctionName">
            <summary>
            Название функции, которое используется для вызова js обработчиков
            </summary>
        </member>
        <member name="F:Zoo.ServerJs.Consts.JsConsts.CallExternalFunctionName">
            <summary>
            Название функции, которое используется для вызова внешнего js компонента
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.ExcepionData">
            <summary>
            Данные для исключения
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.ExcepionData.Message">
            <summary>
            Сообщение
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.ExcepionData.StackTrace">
            <summary>
            Стек вызовов
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.ExternalJsComponent">
            <summary>
            Внешний js компонент
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.ExternalJsComponent.ComponentName">
            <summary>
            Название компонента
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.ExternalJsComponent.Script">
            <summary>
            Скрипт компонента
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.Http.HttpResponseRecord">
            <summary>
            Запись об Http ответе
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Http.HttpResponseRecord.HostName">
            <summary>
            Название хоста
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Http.HttpResponseRecord.HostUrl">
            <summary>
            Урл хоста
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Http.HttpResponseRecord.Request">
            <summary>
            Сериализованный запрос
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Http.HttpResponseRecord.RequestUrl">
            <summary>
            Урл заголовка
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Http.HttpResponseRecord.RequestMethod">
            <summary>
            Метод запроса
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Http.HttpResponseRecord.ExcepionData">
            <summary>
            Данные о возникшем исключении
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Http.HttpResponseRecord.ResponseStatusCode">
            <summary>
            Http статус код ответа
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Http.HttpResponseRecord.Response">
            <summary>
            Сериализованный ответ
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsExecutionContext.ConsoleLogs">
            <summary>
            Список логов консиоли
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsExecutionContext.ExecutionLogs">
            <summary>
            Системные логи времени выполнения
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsExecutionContext.Engine">
            <summary>
            Движок
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsExecutionLog">
            <summary>
            Системные логи выполнения
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsExecutionLog.LoggedOnUtc">
            <summary>
            Дата логгирования
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsExecutionLog.EventId">
            <summary>
            Идентификатор события
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsExecutionLog.Message">
            <summary>
            Сообщение в человекопонятном виде
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsExecutionLog.DataJson">
            <summary>
            Данные описанные в логе
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsLogggedVariables">
            <summary>
            Залоггированные переменные
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsLogggedVariables.LoggedOnUtc">
            <summary>
            Дата логгирования
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsLogggedVariables.SerializedVariables">
            <summary>
            Сериализованные переменные
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsScriptExecutedResult">
            <summary>
            Результат выполнения метода серверного javascript обработчика
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.JsScriptExecutedResult.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.Script">
            <summary>
            Текст скрипта
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.IsSucceeded">
            <summary>
            Выполнено успешно
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.ErrorMessage">
            <summary>
            Сообщение об ошибке
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.StartedOnUtc">
            <summary>
            Дата начала
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.FinishedOnUtc">
            <summary>
            Дата окончания
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.ConsoleLogs">
            <summary>
            Список логов консиоли
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.ExecutionLogs">
            <summary>
            Системные логи времени выполнения
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsScriptExecutedResult.ExceptionData">
            <summary>
            Исключение
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.JsSerializedVariable">
            <summary>
            сериализованная переменная
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsSerializedVariable.TypeFullName">
            <summary>
            Полное название типа данных
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.JsSerializedVariable.DataJson">
            <summary>
            Сериализованные данные
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerDocumentation">
            <summary>
            Документация серверного js обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerDocumentation.WorkerName">
            <summary>
            Название обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerDocumentation.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerDocumentation.Methods">
            <summary>
            Методы обработчика
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerDocumentation.HandleCall(System.String,System.IServiceProvider,Zoo.ServerJs.Abstractions.IJsWorkerMethodCallParameters)">
            <summary>
            Обработка вызова метода
            </summary>
            <param name="methodName"></param>
            <param name="serviceProvider"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerMethodBase">
            <summary>
            Базовое описание метода для серверного javascript обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodBase.FunctionLink">
            <summary>
            Ссылка на функцию
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodBase.HandleCall(Zoo.ServerJs.Abstractions.IJsWorkerMethodCallParameters,System.IServiceProvider)">
            <summary>
            Обработать вызов
            </summary>
            <param name="parameters"></param>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerMethodCallParameters">
            <summary>
            Параметры вызова javascript метода
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs">
            <summary>
            Модель описывающая js метод или функцию
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.Parameters">
            <summary>
            Типы входных параметров
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.Response">
            <summary>
            Тип возвращаемого значения 
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.Method">
            <summary>
            Ссылка на метод
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.MethodName">
            <summary>
            Название метода
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.Description">
            <summary>
            Описание метода
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.ResultDescription">
            <summary>
            Описание результата
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocs.ParameterDescriptions">
            <summary>
            Описание параметров
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions">
            <summary>
            Опции для построения документации по методу
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions.MethodName">
            <summary>
            Название метода
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions.Description">
            <summary>
            Описание метода
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions.ResultDescription">
            <summary>
            Описание результата
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions.ParameterDescriptions">
            <summary>
            Описание параметров
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.Method.JsWorkerMethodResult">
            <summary>
            Результат вызова метода обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Method.JsWorkerMethodResult.Result">
            <summary>
            Результат вызова
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.OpenApi.CallOpenApiWorkerMethod">
            <summary>
            Вызвать удаленный метод (передается сериализованным)
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.CallOpenApiWorkerMethod.WorkerName">
            <summary>
            Имя рабочего класса
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.CallOpenApiWorkerMethod.MethodName">
            <summary>
            Название метода
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.CallOpenApiWorkerMethod.SerializedParameters">
            <summary>
            Сериализованные параметры
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.OpenApi.CallOpenApiWorkerMethodResponse">
            <summary>
            Результат выполнения 
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.CallOpenApiWorkerMethodResponse.IsSucceeded">
            <summary>
            Определяет успешность вызова
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.CallOpenApiWorkerMethodResponse.ExcepionData">
            <summary>
            Текст ошибки
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.CallOpenApiWorkerMethodResponse.ResponseJson">
            <summary>
            Сериализованный ответ
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.OpenApi.JsOpenApiDocs">
            <summary>
            Описание открытого Js API
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiDocs.Workers">
            <summary>
            Рабочие классы интегрированные с c# логикой
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiDocs.ExternalJsComponents">
            <summary>
            Внешние Js компоненты
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation">
            <summary>
            Описание серверного javascript обработчика
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation.#ctor(Zoo.ServerJs.Models.Method.JsWorkerDocumentation)">
            <summary>
            Конструктор
            </summary>
            <param name="docs"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation.#ctor">
            <summary>
            Дефолтный конструктор
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation.WorkerName">
            <summary>
            Название обработчика
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerDocumentation.Methods">
            <summary>
            Методы
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.#ctor(Zoo.ServerJs.Models.Method.JsWorkerMethodDocs)">
            <summary>
            Конструктор
            </summary>
            <param name="methodDocs"></param>
        </member>
        <member name="M:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.#ctor">
            <summary>
            Дефолтный конструктор
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.MethodName">
            <summary>
            Название метода
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.ResultDescription">
            <summary>
            Описание результата
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.ParameterDescriptions">
            <summary>
            Описание параметров
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.Response">
            <summary>
            Ответ от метода обработчика. Подробное описание типа.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.JsOpenApiWorkerMethodDocumentation.Parameters">
            <summary>
            Параметры для метода обработчика. Подробное описание типа.
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.OpenApi.RemoteJsOpenApiAuthenticationData">
            <summary>
            Данные для авторищации
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.RemoteJsOpenApiAuthenticationData.AuthToken">
            <summary>
            Токен авторизации
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.OpenApi.RemoteJsOpenApiDocs">
            <summary>
            Доки для построения удаленных вызовов
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.RemoteJsOpenApiDocs.Description">
            <summary>
            Описание ремоута
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.RemoteJsOpenApiDocs.Docs">
            <summary>
            Описание методов ремоута
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.RemoteJsOpenApiDocs.DocsReceivedOnUtc">
            <summary>
            Когда были получены доки
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.RemoteJsOpenApiDocs.IsDocsReceived">
            <summary>
            Были ли получены доки
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.RemoteJsOpenApiDocs.ReceivingException">
            <summary>
            Исключение, которое возникло при последнем получении
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.OpenApi.RemoteJsOpenApiDocs.AuthenticationData">
            <summary>
            Данные для авторизации
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.RemoteJsOpenApi">
            <summary>
            Удаленное Апи
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.RemoteJsOpenApi.Name">
            <summary>
            Название
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.RemoteJsOpenApi.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.RemoteJsOpenApi.HostUrl">
            <summary>
            Базовый урл на котором крутится удаленные Апи 
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.Task.AddJsTask">
            <summary>
            Добавить Js задание
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Task.AddJsTask.Script">
            <summary>
            Скрипт
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Task.AddJsTask.ExecuteNowOrOnDate">
            <summary>
            Скрипт нуэно выполнить сейчас или в определенную дату
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Task.AddJsTask.ExecuteOnDate">
            <summary>
            В какую дату необходимо выполнить скрипт
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.Task.JsTaskModel">
            <summary>
            Модель описывающая Js задание
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Task.JsTaskModel.Id">
            <summary>
            Идентификатор скрипта
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Task.JsTaskModel.IsExecuted">
            <summary>
            Является ли скрипт выполненым
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Task.JsTaskModel.ExecuteNowOrOnDate">
            <summary>
            Скрипт нужно исполнить сейчас или в определенную дату
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Task.JsTaskModel.ExecuteOnDate">
            <summary>
            В какую дату нужно исполнить скрипт
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.Task.JsTaskModel.Result">
            <summary>
            Результат выполнения скрипта
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Models.SearchJsTasks">
            <summary>
            Модель для поиска резельтатов выполнения скрипта
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.SearchJsTasks.IsSucceeded">
            <summary>
            Скрипт исполнен успешно
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.SearchJsTasks.StartedOnUtc">
            <summary>
            Начало выполнения скрипта
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Models.SearchJsTasks.FinishedOnUtc">
            <summary>
            Окончание выполнения скрипта
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Resources.ExceptionTexts">
            <summary>
              Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.ResourceManager">
            <summary>
              Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.Culture">
            <summary>
              Перезаписывает свойство CurrentUICulture текущего потока для всех
              обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.ComponentWithNameAlreadyRegisteredFormat">
            <summary>
              Ищет локализованную строку, похожую на Компонент с названием &apos;{0}&apos; уже зарегистрирован.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.HttpClientProviderIsAlreadyRegistered">
            <summary>
              Ищет локализованную строку, похожую на Провайдер Http клиентов уже зарегистрирован.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.JsWorkerWithNameAlreadyRegisteredFormat">
            <summary>
              Ищет локализованную строку, похожую на Рабочий Js класс с именем {0} уже зарегистрирован.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.MethodWasCalledWithLessParamsFormat">
            <summary>
              Ищет локализованную строку, похожую на Метод &apos;{0}&apos; Js класса &apos;{1}&apos; содержит {2} параметров, но был вызван с {3} параметрами..
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.MethodWithNameAlreadyExistsInWorkerFormat">
            <summary>
              Ищет локализованную строку, похожую на Метод с названием &apos;{0}&apos; не существует в группе методов класса &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.NeedSettingHttpClientBeforeUseMethodFormat">
            <summary>
              Ищет локализованную строку, похожую на Перед добавлением удаленного Апи, необходимо предоставить фабрику Http клиента. Воспользуйтесь методом {0}.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.NoMethodsInWorkerFormat">
            <summary>
              Ищет локализованную строку, похожую на В Js классе {0} не зарегистрировано ни одного метода.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.NoWorkerWithNameRegisteredFormat">
            <summary>
              Ищет локализованную строку, похожую на В системе нет зарегистрированного рабочего класса с именем &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.RemoteApiWithNameAlreadyRegisteredFormat">
            <summary>
              Ищет локализованную строку, похожую на Удаленное апи с названием &apos;{0}&apos; уже зарегистрировано.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.ScriptStorageIsAlreadyRegistered">
            <summary>
              Ищет локализованную строку, похожую на Хранилище для скриптов уже установлено.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.TypeOfServiceNotRegisteredInServiceCollectionFormat">
            <summary>
              Ищет локализованную строку, похожую на Сервис с типом {0} не зарегистрирован в контейнере зависимостей, для начала зарегистрируйте его в коллекции сервисов..
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ExceptionTexts.WorkerNameIsRequired">
            <summary>
              Ищет локализованную строку, похожую на Необходимо указать имя рабочего класса.
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Resources.ScriptResources">
            <summary>
              Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ScriptResources.ResourceManager">
            <summary>
              Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ScriptResources.Culture">
            <summary>
              Перезаписывает свойство CurrentUICulture текущего потока для всех
              обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Resources.ScriptResources.ScriptInit">
             <summary>
               Ищет локализованную строку, похожую на var api = {};
            api.PrepareResult = function (result) {
                if (result !== undefined) {
                    return JSON.parse(result);
                }
            }
            api.Call = function (workerName, methodName, p1, p2, p3, p4, p5, p6) {
                var result = inner_js_api.Call(workerName, methodName, p1, p2, p3, p4, p5, p6);
            
                return this.PrepareResult(result);
            }
            api.CallExternal = function (componentName, methodName, methodPayLoad) {
                var result = inner_js_api.CallExternal(componentName, methodName, methodPayLoad);
            
                return t [остаток строки не уместился]&quot;;.
             </summary>
        </member>
        <member name="T:Zoo.ServerJs.Services.DefaultJsScriptResultStorage">
            <summary>
            Дефолтная реализация хранилища без хранилища
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.DefaultJsScriptResultStorage.AddResult(Zoo.ServerJs.Models.JsScriptExecutedResult)">
            <inheritdoc />
        </member>
        <member name="M:Zoo.ServerJs.Services.DefaultJsScriptResultStorage.AddTask(Zoo.ServerJs.Models.Task.AddJsTask)">
            <inheritdoc />
        </member>
        <member name="M:Zoo.ServerJs.Services.DefaultJsScriptResultStorage.CancelTask(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Zoo.ServerJs.Services.DefaultJsScriptResultStorage.GetTask(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Zoo.ServerJs.Services.DefaultJsScriptResultStorage.SearchTasks(Zoo.ServerJs.Models.SearchJsTasks)">
            <inheritdoc />
        </member>
        <member name="T:Zoo.ServerJs.Services.HandleJsCallWorker">
            <summary>
            Обработчик js вызовов
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.HandleJsCallWorker.#ctor(Zoo.ServerJs.Services.JsExecutorComponents,Zoo.ServerJs.Models.JsExecutionContext)">
            <summary>
            Конструктор
            </summary>
            <param name="components"></param>
            <param name="executionContext"></param>
        </member>
        <member name="M:Zoo.ServerJs.Services.HandleJsCallWorker.Call(System.String,System.String,System.Object[])">
            <summary>
            Вызвать внутренний метод сервис
            </summary>
            <param name="workerName">название класса рабочего который нужно вызвать</param>
            <param name="method">метод который нужно вызвать у данного рабочего</param>
            <param name="methodParams">Параметры метода</param>
        </member>
        <member name="M:Zoo.ServerJs.Services.HandleJsCallWorker.CallExternal(System.String,System.String,System.Object)">
            <summary>
            Вызвать внешний сервис, определенный через Js
            </summary>
            <param name="componentName"></param>
            <param name="methodName"></param>
            <param name="methodPayLoad"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.HandleJsCallWorker.CallRemoteWorkerMethod(System.String,System.String,System.String,System.Object[])">
            <summary>
            Вызвать удаленное апи
            </summary>
            <param name="remoteName"></param>
            <param name="workerName"></param>
            <param name="methodName"></param>
            <param name="methodParams"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Services.JsExecutor">
            <summary>
            Исполнитель кода на Js
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.#ctor(System.IServiceProvider,Zoo.ServerJs.Abstractions.IServerJsHttpClient,Zoo.ServerJs.Abstractions.IJsScriptTaskStorage,Zoo.ServerJs.Services.JsExecutorProperties)">
            <summary>
            Конструктор
            </summary>
            <param name="serviceProvider"></param>
            <param name="httpClient"></param>
            <param name="storage"></param>
            <param name="properties"></param>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.UpdateRemotesDocsAsync">
            <summary>
            Обновить документацию по удаленным открытым Js Api
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.GetRemoteDocs">
            <summary>
            Получить документацию по удаленным JsOpenApi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.AddRemoteApi(Zoo.ServerJs.Models.RemoteJsOpenApi)">
            <summary>
            Добавить удаленное Апи
            </summary>
            <param name="remoteApi"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.EditRemoteApi(Zoo.ServerJs.Models.RemoteJsOpenApi)">
            <summary>
            Отредактировать удаленное апи
            </summary>
            <param name="remoteApi"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.DeleteRemoteApi(System.String)">
            <summary>
            Удалить удаленное апи
            </summary>
            <param name="hostName"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.GetHttpClient">
            <summary>
            Получить Http клиента
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.GetDocumentation">
            <summary>
            Получить документацию
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.CallWorkerMethod``1(System.String,System.String,System.Object[])">
            <summary>
            Вызвать внутренний сервис, написанный на Js
            </summary>
            <param name="workerName">название класса рабочего который нужно вызвать</param>
            <param name="method">метод который нужно вызвать у данного рабочего</param>
            <param name="methodParams">Параметры метода</param>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.CallExternalComponent``1(System.String,System.String,System.Object)">
            <summary>
            Вызвать компонент, написанный на Js
            </summary>
            <param name="componentName">название компонента который нужно вызвать</param>
            <param name="methodName">метод который нужно вызвать у данного компонента</param>
            <param name="methodPayload">Параметр, который нужно передать в метод компонента</param>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.RunScriptDetaiiled(System.String)">
            <summary>
            Вызвать скрипт
            </summary>
            <param name="jsScript"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutor.CallWorkerMethod(Zoo.ServerJs.Models.OpenApi.CallOpenApiWorkerMethod)">
            <summary>
            Вызвать метод рабочего класса.
            <para></para>
            Данный метод не возвращает исключений. Его нужно испльзовать как внешюю точку доступа.
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Services.JsExecutorBuilder">
            <summary>
            Построитель для <see cref="T:Zoo.ServerJs.Services.JsExecutor"/>
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Конструктор
            </summary>
            <param name="serviceCollection"></param>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddHttpClient(System.Func{System.IServiceProvider,Zoo.ServerJs.Services.ServerJsHttpClient})">
            <summary>
            Добавить фабрику Http клиентов для вызовов удаленных сервисов.
            Регистрирует данный объект как синглтон.
            </summary>
            <param name="srvProviderFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddRemoteApi(Zoo.ServerJs.Models.RemoteJsOpenApi)">
            <summary>
            Добавить удаленное Апи
            </summary>
            <param name="remoteApi"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddScriptStorage``1">
            <summary>
            Регистрирует хранилище для скриптов как синглтон
            </summary>
            <typeparam name="TStorage"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddExternalComponents(System.Collections.Generic.IEnumerable{Zoo.ServerJs.Models.ExternalJsComponent})">
            <summary>
            Добавить внешние компоненты
            </summary>
            <param name="components"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddExternalComponent(Zoo.ServerJs.Models.ExternalJsComponent)">
            <summary>
            Добавить внешний компонент
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddJsWorker(System.Func{Zoo.ServerJs.Services.JsWorkerBuilder,Zoo.ServerJs.Models.Method.JsWorkerDocumentation})">
            <summary>
            Добавить нового рабочего
            </summary>
            <param name="jsWorkerBuilderFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.AddJsWorker(Zoo.ServerJs.Abstractions.IJsWorker)">
            <summary>
            Добавить нового рабочего
            </summary>
            <param name="jsWorker"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsExecutorBuilder.Build(System.Action{Jint.Engine})">
            <summary>
            Зарегистрировать класс <see cref="T:Zoo.ServerJs.Services.JsExecutor"/> в контейнере зависимостей
            </summary>
            <param name="action"></param>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutorComponents.JsWorkers">
            <summary>
            Javascript обработчики
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutorComponents.ExternalComponents">
            <summary>
            Внешние компоненты
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Services.JsExecutorProperties">
            <summary>
            Свойства для javascript исполнителя
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutorProperties.EngineAction">
            <summary>
            Действие над движком
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutorProperties.JsWorkers">
            <summary>
            Список обработчиков
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutorProperties.ExternalComponents">
            <summary>
            Внешние компоненты
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsExecutorProperties.RemoteApis">
            <summary>
            Удаленные апи
            </summary>
        </member>
        <member name="T:Zoo.ServerJs.Services.JsWorkerBuilder">
            <summary>
            Построитель Js рабочего
            </summary>
        </member>
        <member name="P:Zoo.ServerJs.Services.JsWorkerBuilder.Builder">
            <summary>
            Построитель
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.SetWorkerName(System.String)">
            <summary>
            Установить название
            </summary>
            <param name="workerName"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.SetDescription(System.String)">
            <summary>
            Установить описание
            </summary>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.GetServiceMethodBuilder``1">
            <summary>
            Получить построителя метода относительно сервиса
            </summary>
            <typeparam name="TService">Тип сервиса</typeparam>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaFunction``1(System.Func{``0},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaFunction``2(System.Func{``0,``1},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaFunction``3(System.Func{``0,``1,``2},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaFunction``4(System.Func{``0,``1,``2,``3},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaAction(System.Action,Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaAction``1(System.Action{``0},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaAction``2(System.Action{``0,``1},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaTask(System.Func{System.Threading.Tasks.Task},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaTask``1(System.Func{``0,System.Threading.Tasks.Task},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaTask``1(System.Func{System.Threading.Tasks.Task{``0}},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.AddMethodViaTask``2(System.Func{``0,System.Threading.Tasks.Task{``1}},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerBuilder.Build">
            <summary>
            Построить Js рабочего
            </summary>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1">
            <summary>
            Построитель методов для Js рабочего
            </summary>
            <typeparam name="TService"></typeparam>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaFunction``1(System.Func{`0,``0},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaFunction``2(System.Func{`0,``0,``1},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaFunction``3(System.Func{`0,``0,``1,``2},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaFunction``4(System.Func{`0,``0,``1,``2,``3},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaAction(System.Action{`0},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaAction``1(System.Action{`0,``0},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaAction``2(System.Action{`0,``0,``1},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaTask(System.Func{`0,System.Threading.Tasks.Task},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaTaskWithResult``1(System.Func{`0,System.Threading.Tasks.Task{``0}},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaTaskWithResult``2(System.Func{`0,``0,System.Threading.Tasks.Task{``1}},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.AddMethodViaTaskWithResult``3(System.Func{`0,``0,``1,System.Threading.Tasks.Task{``2}},Zoo.ServerJs.Models.Method.JsWorkerMethodDocsOptions)">
            <summary>
            Добавить метод
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Services.JsWorkerServiceMethodBuilder`1.Build">
            <summary>
            Построить Js рабочего
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.RemoteJsCaller.#ctor(System.Collections.Concurrent.ConcurrentDictionary{System.String,Zoo.ServerJs.Models.OpenApi.RemoteJsOpenApiDocs},Zoo.ServerJs.Abstractions.IServerJsHttpClient,Zoo.ServerJs.Models.JsExecutionContext)">
            <summary>
            Конструктор
            </summary>
            <param name="remoteDocs"></param>
            <param name="httpClient"></param>
            <param name="executionContext"></param>
        </member>
        <member name="M:Zoo.ServerJs.Services.RemoteJsCaller.CallRemoteWorkerMethod(System.String,System.String,System.String,System.Object[])">
            <summary>
            Вызвать внешний сервис, определенный через Js
            </summary>
            <param name="remoteName"></param>
            <param name="workerName"></param>
            <param name="methodName"></param>
            <param name="methodParams"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.Services.ServerJsHttpClient">
            <summary>
            Дефолтный исполнитель Http запросов
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Services.ServerJsHttpClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Конструктор
            </summary>
            <param name="httpClient"></param>
        </member>
        <member name="M:Zoo.ServerJs.Services.ServerJsHttpClient.PostAsync``1(System.String,System.String,System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Zoo.ServerJs.Services.ServerJsHttpClient.GetAsync(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Zoo.ServerJs.Statics.ZooSerializer">
            <summary>
            Внутренний сериализатор
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.Statics.ZooSerializer.Deserialize``1(System.String)">
            <summary>
            Дессериализовать строку в объект
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.Statics.ZooSerializer.Serialize(System.Object)">
            <summary>
            Сериализовать объект в строку
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Zoo.ServerJs.WorkerExamples.CalculatorJsWorker">
            <summary>
            Калькулятор
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.WorkerExamples.CalculatorJsWorker.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="workerName"></param>
        </member>
        <member name="M:Zoo.ServerJs.WorkerExamples.CalculatorJsWorker.JsWorkerDocs(Zoo.ServerJs.Services.JsWorkerBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Zoo.ServerJs.WorkerExamples.CrocoTypeDescriptionJsWorker">
            <summary>
            Описыватель типов
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.WorkerExamples.CrocoTypeDescriptionJsWorker.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="workerName"></param>
        </member>
        <member name="M:Zoo.ServerJs.WorkerExamples.CrocoTypeDescriptionJsWorker.GetEnumTypeDocumentation(System.String)">
            <summary>
            Получить документацию по перечислению. 
            Если тип не найден, или найденный тип не является перечислением возвращает null.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.WorkerExamples.CrocoTypeDescriptionJsWorker.GetTypeDocumentation(System.String)">
            <summary>
            Получить документацию по типу данных
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Zoo.ServerJs.WorkerExamples.CrocoTypeDescriptionJsWorker.JsWorkerDocs(Zoo.ServerJs.Services.JsWorkerBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Zoo.ServerJs.WorkerExamples.RemoteOpenApiCrudOperationsJsWorker">
            <summary>
            Js рабочий с методами для работы с удаленными хостами
            </summary>
        </member>
        <member name="M:Zoo.ServerJs.WorkerExamples.RemoteOpenApiCrudOperationsJsWorker.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="workerName"></param>
        </member>
        <member name="M:Zoo.ServerJs.WorkerExamples.RemoteOpenApiCrudOperationsJsWorker.JsWorkerDocs(Zoo.ServerJs.Services.JsWorkerBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
